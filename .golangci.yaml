# This file contains all available configuration options
# with their default values.

# options for analysis running
run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  modules-download-mode: readonly

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: true

  skip-files: []

  go: "1.18"

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  # default is "colored-line-number"
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # make issues output unique by line, default is true
  uniq-by-line: true

  # add a prefix to the output file references; default is no prefix
  path-prefix: ""

  # sorts results by: filepath, line and column
  sort-results: true

# all available settings of specific linters
linters-settings:
  errcheck:
    # report about not checking of errors in type assertions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: false

    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: false

  errorlint:
    # Check whether fmt.Errorf uses the %w verb for formatting errors. See the readme for caveats
    errorf: true
    # Check for plain type assertions and type switches
    asserts: true
    # Check for plain error comparisons
    comparison: true

  forbidigo:
    # Forbid the following identifiers (identifiers are written using regexp):
    forbid:
      - ^print.*$
      - ^fmt\.Println$
      - ^fmt\.Print$

  gofmt:
    simplify: true
    rewrite-rules:
      - pattern: "interface{}"
        replacement: "any"

  funlen:
    lines: 60
    statements: 40

  gocyclo:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    min-complexity: 15

  godot:
    # comments to be checked: `declarations`, `toplevel`, or `all`
    scope: declarations
    # list of regexps for excluding particular comment lines from check
    exclude: []
    # example: exclude comments which contain numbers
    # - '[0-9]+'
    # check that each sentence starts with a capital letter
    capital: false

  gci:
    sections:
      - standard # Captures all standard packages if they do not match another section.
      - default # Contains all imports that could not be matched to another section type.
    sectionSeparators:
      - newLine

  depguard:
    list-type: denylist
    # Check the list against standard lib.
    # Default: false
    include-go-root: true
    # A list of packages for the list type specified.
    # Default: []
    packages:
      - "github.com/sirupsen/logrus"
      - "github.com/golang/mock/gomock"
    # A list of packages for the list type specified.
    # Specify an error message to output when a denied package is used.
    # Default: []
    packages-with-error-message:
      - "github.com/goccy/go-json": 'use "github.com/bytedance/sonic"'
      - "github.com/sirupsen/logrus": 'use "app/pkg/logger"'
      - "github.com/golang/mock": 'use "github.com/stretchr/testify/mock" and "github.com/vektra/mockery"'
    # Create additional guards that follow the same configuration pattern.
    # Results from all guards are aggregated together.
    additional-guards:
      - list-type: denylist
        include-go-root: false
        packages:
          - github.com/stretchr/testify
        # Specify rules by which the linter ignores certain files for consideration.
        ignore-file-rules:
          - "!**/*_test.go"
          - "!/mocks/**/*.go"

  gomnd:
    settings:
      mnd:
        # the list of enabled checks, see https://github.com/tommy-muehle/go-mnd/#checks for description.
        checks:
          - argument
          - case
          - operation
          - return
          - assign
        ignored-functions: strconv\..*,time\..*,make,math\..*,strings\..*
        ignored-numbers: 1,2,3,10,100,1000,10000

  gosimple:
    # Select the Go version to target. The default is '1.13'.
    go: "1.18"
    # https://staticcheck.io/docs/options#checks
    checks: ["all"]

  importas:
    no-unaliased: false
    no-extra-aliases: false
    alias:
      - pkg: "log"
        alias: stdLog
      - pkg: "gorm.io/gorm/logger"
        alias: gormLogger
      - pkg: "github.com/go-playground/universal-translator"
        alias: ut
      - pkg: "github.com/go-playground/validator/v10/translations/zh"
        alias: zhTranslations

  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 120
    # tab width in spaces. Default to 1.
    tab-width: 2

  misspell:
    # Correct spellings using locale preferences for US or UK.
    # Default is to use a neutral variety of English.
    # Setting locale to US will correct the British spelling of 'colour' to 'color'.
    locale: US

  staticcheck:
    # Select the Go version to target. The default is '1.13'.
    go: "1.18"
    # https://staticcheck.io/docs/options#checks
    checks: ["all"]

  stylecheck:
    # Select the Go version to target. The default is '1.13'.
    go: "1.18"

  testpackage:
    # regexp pattern to skip files
    skip-regexp: (export|internal)_test\.go

  unused:
    # Select the Go version to target. The default is '1.13'.
    go: "1.18"

  exhaustive:
    # check switch statements in generated files also
    check-generated: false
    # indicates that switch statements are to be considered exhaustive if a
    # 'default' case is present, even if all enum members aren't listed in the
    # switch
    default-signifies-exhaustive: true
  govet:
    enable-all: true
    disable:
      - fieldalignment
  #      - shadow

  nlreturn:
    block-size: 3

  ifshort:
    # Maximum length of vars declaration measured in number of lines, after which linter won't suggest using short syntax.
    # Has higher priority than max-decl-chars.
    max-decl-lines: 1
    # Maximum length of vars declaration measured in number of characters, after which linter won't suggest using short syntax.
    max-decl-chars: 30

  tagliatelle:
    # Check the struck tag name case.
    case:
      # Use the struct field name to check the name of the struct tag.
      # Default: false
      use-field-name: false
      rules:
        # Any struct tag type can be used.
        # Support string case: `camel`, `pascal`, `kebab`, `snake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`
        json: snake
        yaml: snake

linters:
  enable-all: true
  disable:
    - gomoddirectives # resolve conflict
    - nolintlint
    - ireturn
    - contextcheck
    - bodyclose
    - wsl # noisy
    - varnamelen # noisy
    - exhaustivestruct # too noisy, default zero value is a good thing.
    - exhaustruct # too noisy
    - gofumpt # break import grouping
    - prealloc # perf
    - maligned # replaced by go vert
    - dupl
    - cyclop # we have gocyclo
    - goimports # we have gci already
    - nlreturn
    - godox
    - execinquery
    - nonamedreturns
    # useless
    - sqlclosecheck
    - rowserrcheck
    - nilerr
    - dupword
    - wrapcheck
    # 1.18
    - wastedassign
    - nosnakecase # false positive for variable and const defined in other lib
    - structcheck
    # deprecated
    - varcheck
    - deadcode
    - interfacer
    - ifshort
    - scopelint
    - golint

  fast: false

issues:
  new: false
  fix: false
  exclude-use-default: true
  exclude-rules:
    - path: "cmd/.*"
      linters: [gochecknoglobals, gochecknoinits, wrapcheck]

    - path: '.*_test\.go'
      linters:
        [
          gocritic,
          gochecknoglobals,
          godot,
          nosnakecase,
          funlen,
          paralleltest,
          gosec,
          thelper,
          errorlint,
          errchkjson,
        ]

    - source: "var .* = pool.New"
      linters: [gochecknoglobals]

    - source: 'var Module = fx\.Module\('
      linters: [gochecknoglobals]

    - source: 'var .* = reflect\.TypeOf'
      linters: [gochecknoglobals]

    - source: 'var .* sync\.Once'
      linters: [gochecknoglobals]

    - linters: [goerr113, errorlint]
      source: "if err == redis.Nil {"

    # https://github.com/kunwardeep/paralleltest/issues/8
    - linters:
        - paralleltest
      text: "Range statement for test \\S+ does not use range value in test Run"

    - linters:
        - nilerr
      source: "return false, nil"
